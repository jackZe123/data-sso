<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yipai.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.yipai.pojo.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="video_id" property="videoId" jdbcType="INTEGER" />
    <result column="be_user_id" property="beUserId" jdbcType="INTEGER" />
    <result column="be_comment_id" property="beCommentId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, comment, user_id, video_id, be_user_id, be_comment_id, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yipai.pojo.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yipai.pojo.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yipai.pojo.Comment" >
    insert into comment (id, comment, user_id, 
      video_id, be_user_id, be_comment_id, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{videoId,jdbcType=INTEGER}, #{beUserId,jdbcType=INTEGER}, #{beCommentId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yipai.pojo.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="videoId != null" >
        video_id,
      </if>
      <if test="beUserId != null" >
        be_user_id,
      </if>
      <if test="beCommentId != null" >
        be_comment_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null" >
        #{videoId,jdbcType=INTEGER},
      </if>
      <if test="beUserId != null" >
        #{beUserId,jdbcType=INTEGER},
      </if>
      <if test="beCommentId != null" >
        #{beCommentId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yipai.pojo.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.videoId != null" >
        video_id = #{record.videoId,jdbcType=INTEGER},
      </if>
      <if test="record.beUserId != null" >
        be_user_id = #{record.beUserId,jdbcType=INTEGER},
      </if>
      <if test="record.beCommentId != null" >
        be_comment_id = #{record.beCommentId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      comment = #{record.comment,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      video_id = #{record.videoId,jdbcType=INTEGER},
      be_user_id = #{record.beUserId,jdbcType=INTEGER},
      be_comment_id = #{record.beCommentId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yipai.pojo.Comment" >
    update comment
    <set >
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null" >
        video_id = #{videoId,jdbcType=INTEGER},
      </if>
      <if test="beUserId != null" >
        be_user_id = #{beUserId,jdbcType=INTEGER},
      </if>
      <if test="beCommentId != null" >
        be_comment_id = #{beCommentId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yipai.pojo.Comment" >
    update comment
    set comment = #{comment,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      video_id = #{videoId,jdbcType=INTEGER},
      be_user_id = #{beUserId,jdbcType=INTEGER},
      be_comment_id = #{beCommentId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getComments" parameterType="int" resultType="com.yipai.facade.response.GetCommentResponse">
    select `comment`.id as commentid,`comment`.user_id as userid,`user`.user_name as username,`comment`.comment as comment,`comment`.be_user_id as beuserid,`comment`.be_comment_id as becommentid,`comment`.create_time as createtime FROM user,comment where video_id=#{videoid} and `comment`.user_id=`user`.user_account order  by comment.create_time
  </select>
  <insert id="pushComment" >
   insert into comment(comment,user_id,video_id,be_user_id,be_comment_id,create_time) values (#{comment},#{userid},#{videoid},#{beuserid},#{becommentid},#{createtime})
  </insert>
  <delete id="deleteComment">
   delete from comment where id = #{commentid}
  </delete>
  <select id="getCommentByAdmin" resultType="com.yipai.facade.response.GetCommentByAdminResponse">
      select comment.id as commentid,comment.comment as comment,user.user_name as username,comment.video_id as videoid,DATE_FORMAT(comment.create_time,'%m月%d日') as createtime from user,comment where user.user_account=comment.user_id
  </select>
</mapper>